/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './app/routes/__root'
import { Route as IndexImport } from './app/routes/index'
import { Route as OrderIndexImport } from './app/routes/order/index'
import { Route as WidgetIdLayoutImport } from './app/routes/$widgetId/_layout'
import { Route as WidgetIdLayoutIndexImport } from './app/routes/$widgetId/_layout/index'
import { Route as WidgetIdLayoutOrderIndexImport } from './app/routes/$widgetId/_layout/order/index'

// Create Virtual Routes

const WidgetIdImport = createFileRoute('/$widgetId')()

// Create/Update Routes

const WidgetIdRoute = WidgetIdImport.update({
  path: '/$widgetId',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OrderIndexRoute = OrderIndexImport.update({
  path: '/order/',
  getParentRoute: () => rootRoute,
} as any)

const WidgetIdLayoutRoute = WidgetIdLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => WidgetIdRoute,
} as any)

const WidgetIdLayoutIndexRoute = WidgetIdLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => WidgetIdLayoutRoute,
} as any)

const WidgetIdLayoutOrderIndexRoute = WidgetIdLayoutOrderIndexImport.update({
  path: '/order/',
  getParentRoute: () => WidgetIdLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$widgetId': {
      preLoaderRoute: typeof WidgetIdImport
      parentRoute: typeof rootRoute
    }
    '/$widgetId/_layout': {
      preLoaderRoute: typeof WidgetIdLayoutImport
      parentRoute: typeof WidgetIdRoute
    }
    '/order/': {
      preLoaderRoute: typeof OrderIndexImport
      parentRoute: typeof rootRoute
    }
    '/$widgetId/_layout/': {
      preLoaderRoute: typeof WidgetIdLayoutIndexImport
      parentRoute: typeof WidgetIdLayoutImport
    }
    '/$widgetId/_layout/order/': {
      preLoaderRoute: typeof WidgetIdLayoutOrderIndexImport
      parentRoute: typeof WidgetIdLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  WidgetIdRoute.addChildren([
    WidgetIdLayoutRoute.addChildren([
      WidgetIdLayoutIndexRoute,
      WidgetIdLayoutOrderIndexRoute,
    ]),
  ]),
  OrderIndexRoute,
])

/* prettier-ignore-end */
