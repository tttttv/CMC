
sudo ssh -o 'IdentityFile=/dev/null' -o IdentitiesOnly=yes -i '/home/baka/ControllGPS/yc-q641' tttttv@158.160.113.89

sudo docker compose logs --tail 5000 web 
sudo docker compose exec -it celery tail -5000 /web/logs/celery.log

sudo docker compose exec -it web bash
python manage.py makemigrations
python manage.py makemigrations CORE
python manage.py migrate

LOCAL
docker compose exec -it web bash
docker compose -f docker-compose.local.yml up --build -d --no-deps db
docker compose -f docker-compose.local.yml up --build -d --no-deps redis

https://api.fleshlight.fun/admin/login/?next=/admin/

python manage.py shell
from CORE.models import *
BybitCurrency.cache_exchange_from()
P2POrderMessage.objects.all()


http://127.0.0.1:8000/api/exchange/from 
http://127.0.0.1:8000/api/exchange/to


http://127.0.0.1:8000/admin/
http://127.0.0.1:8000/api/v2/docs
http://127.0.0.1:8000/api/exchange/to

https://api.fleshlight.fun/api/exchange/price?anchor=currency&amount=500&chain=NEAR&payment_method=377&token=NEAR
http://127.0.0.1:8000/api/exchange/price?anchor=currency&amount=500&chain=NEAR&payment_method=3&token=NEAR

sidorovivan01998@gmail.com
123456789


messages = s.get_order_messages(order.order_id) #Выгружаем сообщения из базы
for m in messages:
    P2POrderMessage.create_from_parser(order.order_id, m)




http://158.160.113.89/admin/

api.fleshlight.fun
fleshlight.fun



sudo docker compose logs --tail 5000 web 
celery log

sudo docker compose exec -it celery tail -5000 /web/logs/celery.log
sudo docker compose exec -it celery celery -A CMC inspect active
sudo docker compose exec -it celery celery -A CMC inspect scheduled
sudo docker compose exec -it celery celery -A CMC inspect registered

sudo docker compose up -d --build --no-deps web 
sudo docker compose up -d --build --no-deps celery
sudo docker compose up -d --build --no-deps celery-beat
sudo docker compose up -d --build --no-deps celery celery-beat


sudo docker compose up -d --force-recreate --no-deps nginx


СПИСОК ДЕЛ
    проверить задачу - что она добавлена и крутится msg 


TASK2 chat
    path('order/message', views.get_chat_messages_view, name="order_messages"),
    path('order/message/send', views.send_chat_message_view, name="order_message_send"),
    path('order/message/send_image', views.send_chat_image_view, name="order_image_send"),

    Как происходит обновление статуса в django как сервер сообщает клиенту о новом сообщении / уведомлении

    message = P2POrderMessage(
        order_id='1781097796773679104',
        message_id='591828384')
    message.save()
    message.image.save(file_name, data, save=True)

    Может отдельным таском обновлять сообщения из заказа
        если он в неком статусе активном

